(()=>{"use strict";const e=require("electron"),n={window:{minimize:()=>e.ipcRenderer.invoke("window:minimize"),maximize:()=>e.ipcRenderer.invoke("window:maximize"),close:()=>e.ipcRenderer.invoke("window:close-current"),create:n=>e.ipcRenderer.invoke("window:create",n),onStateChanged:n=>{e.ipcRenderer.on("window-state-changed",(e,i)=>n(i))},onFocusChanged:n=>{e.ipcRenderer.on("window-focus-changed",(e,i)=>n(i.focused))}},fs:{readFile:n=>e.ipcRenderer.invoke("fs:read-file",n),writeFile:(n,i)=>e.ipcRenderer.invoke("fs:write-file",n,i),deleteFile:n=>e.ipcRenderer.invoke("fs:delete-file",n),createDirectory:n=>e.ipcRenderer.invoke("fs:create-directory",n),listDirectory:n=>e.ipcRenderer.invoke("fs:list-directory",n),getStats:n=>e.ipcRenderer.invoke("fs:get-stats",n),watchDirectory:n=>e.ipcRenderer.invoke("fs:watch-directory",n),unwatchDirectory:n=>e.ipcRenderer.invoke("fs:unwatch-directory",n),copy:(n,i)=>e.ipcRenderer.invoke("fs:copy",n,i),move:(n,i)=>e.ipcRenderer.invoke("fs:move",n,i),rename:(n,i)=>e.ipcRenderer.invoke("fs:rename",n,i),exists:n=>e.ipcRenderer.invoke("fs:exists",n),getPreview:n=>e.ipcRenderer.invoke("fs:get-preview",n),search:(n,i,r)=>e.ipcRenderer.invoke("fs:search",n,i,r),validateName:n=>e.ipcRenderer.invoke("fs:validate-name",n),createUniqueName:(n,i,r)=>e.ipcRenderer.invoke("fs:create-unique-name",n,i,r),joinPath:(...n)=>e.ipcRenderer.invoke("fs:join-path",...n),getFileName:n=>e.ipcRenderer.invoke("fs:get-file-name",n),getDirectoryName:n=>e.ipcRenderer.invoke("fs:get-directory-name",n),getExtension:n=>e.ipcRenderer.invoke("fs:get-extension",n),onDirectoryChanged:n=>{e.ipcRenderer.on("fs:directory-changed",(e,i)=>n(i))}},app:{showOpenDialog:n=>e.ipcRenderer.invoke("app:show-open-dialog",n),showSaveDialog:n=>e.ipcRenderer.invoke("app:show-save-dialog",n),showMessageBox:n=>e.ipcRenderer.invoke("app:show-message-box",n),openExternal:n=>e.ipcRenderer.invoke("app:open-external",n),showItemInFolder:n=>e.ipcRenderer.invoke("app:show-item-in-folder",n),getVersion:()=>e.ipcRenderer.invoke("app:get-version"),getPath:n=>e.ipcRenderer.invoke("app:get-path",n)},agent:{create:n=>e.ipcRenderer.invoke("agent:create",n),start:n=>e.ipcRenderer.invoke("agent:start",n),stop:n=>e.ipcRenderer.invoke("agent:stop",n),getStatus:n=>e.ipcRenderer.invoke("agent:get-status",n),list:()=>e.ipcRenderer.invoke("agent:list")},task:{create:n=>e.ipcRenderer.invoke("task:create",n),assign:(n,i)=>e.ipcRenderer.invoke("task:assign",n,i),getStatus:n=>e.ipcRenderer.invoke("task:get-status",n),list:()=>e.ipcRenderer.invoke("task:list")},system:{getInfo:()=>e.ipcRenderer.invoke("system:get-info"),executeCommand:(n,i)=>e.ipcRenderer.invoke("system:execute-command",n,i),getEnv:n=>e.ipcRenderer.invoke("system:get-env",n)},onMenuAction:n=>{e.ipcRenderer.on("menu-action",(e,i)=>n(i))},onTrayAction:n=>{e.ipcRenderer.on("tray-action",(e,i)=>n(i))},removeAllListeners:n=>{e.ipcRenderer.removeAllListeners(n)},isDevelopment:!1};e.contextBridge.exposeInMainWorld("electronAPI",n)})();